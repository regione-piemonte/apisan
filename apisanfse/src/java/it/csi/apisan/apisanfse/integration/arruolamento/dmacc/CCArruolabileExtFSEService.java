/*******************************************************************************

* Copyright Regione Piemonte - 2022

* SPDX-License-Identifier: EUPL-1.2

******************************************************************************/
package it.csi.apisan.apisanfse.integration.arruolamento.dmacc;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.14
 * 2020-03-20T16:13:50.584+01:00
 * Generated source version: 2.7.14
 * 
 */
@WebServiceClient(name = "CCArruolabileExtFSEService", 
                  wsdlLocation = "https://tst-feapi-dma.isan.csi.it/dmaccmedrti/services/CCArruolabileExtFSEService?wsdl",
                  targetNamespace = "http://dmacc.csi.it/") 
public class CCArruolabileExtFSEService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://dmacc.csi.it/", "CCArruolabileExtFSEService");
    public final static QName CCArruolabileExtFSEServiceHttpSoap11Endpoint = new QName("http://dmacc.csi.it/", "CCArruolabileExtFSEServiceHttpSoap11Endpoint");
    public final static QName CCArruolabileExtFSEServiceHttpsSoap11Endpoint = new QName("http://dmacc.csi.it/", "CCArruolabileExtFSEServiceHttpsSoap11Endpoint");
    public final static QName CCArruolabileExtFSEServiceHttpEndpoint = new QName("http://dmacc.csi.it/", "CCArruolabileExtFSEServiceHttpEndpoint");
    public final static QName CCArruolabileExtFSEServiceHttpsSoap12Endpoint = new QName("http://dmacc.csi.it/", "CCArruolabileExtFSEServiceHttpsSoap12Endpoint");
    public final static QName CCArruolabileExtFSEServiceHttpsEndpoint = new QName("http://dmacc.csi.it/", "CCArruolabileExtFSEServiceHttpsEndpoint");
    public final static QName CCArruolabileExtFSEServiceHttpSoap12Endpoint = new QName("http://dmacc.csi.it/", "CCArruolabileExtFSEServiceHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("https://tst-feapi-dma.isan.csi.it/dmaccmedrti/services/CCArruolabileExtFSEService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CCArruolabileExtFSEService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://tst-feapi-dma.isan.csi.it/dmaccmedrti/services/CCArruolabileExtFSEService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CCArruolabileExtFSEService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CCArruolabileExtFSEService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CCArruolabileExtFSEService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CCArruolabileExtFSEService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CCArruolabileExtFSEService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CCArruolabileExtFSEService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpSoap11Endpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpSoap11Endpoint() {
        return super.getPort(CCArruolabileExtFSEServiceHttpSoap11Endpoint, CCArruolabileExtFSEServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpSoap11Endpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(CCArruolabileExtFSEServiceHttpSoap11Endpoint, CCArruolabileExtFSEServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpsSoap11Endpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpsSoap11Endpoint() {
        return super.getPort(CCArruolabileExtFSEServiceHttpsSoap11Endpoint, CCArruolabileExtFSEServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpsSoap11Endpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(CCArruolabileExtFSEServiceHttpsSoap11Endpoint, CCArruolabileExtFSEServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpEndpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpEndpoint() {
        return super.getPort(CCArruolabileExtFSEServiceHttpEndpoint, CCArruolabileExtFSEServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpEndpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(CCArruolabileExtFSEServiceHttpEndpoint, CCArruolabileExtFSEServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpsSoap12Endpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpsSoap12Endpoint() {
        return super.getPort(CCArruolabileExtFSEServiceHttpsSoap12Endpoint, CCArruolabileExtFSEServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpsSoap12Endpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(CCArruolabileExtFSEServiceHttpsSoap12Endpoint, CCArruolabileExtFSEServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpsEndpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpsEndpoint() {
        return super.getPort(CCArruolabileExtFSEServiceHttpsEndpoint, CCArruolabileExtFSEServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpsEndpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(CCArruolabileExtFSEServiceHttpsEndpoint, CCArruolabileExtFSEServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpSoap12Endpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpSoap12Endpoint() {
        return super.getPort(CCArruolabileExtFSEServiceHttpSoap12Endpoint, CCArruolabileExtFSEServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCArruolabileExtFSEServicePortType
     */
    @WebEndpoint(name = "CCArruolabileExtFSEServiceHttpSoap12Endpoint")
    public CCArruolabileExtFSEServicePortType getCCArruolabileExtFSEServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(CCArruolabileExtFSEServiceHttpSoap12Endpoint, CCArruolabileExtFSEServicePortType.class, features);
    }

}
