/*******************************************************************************

* Copyright Regione Piemonte - 2022

* SPDX-License-Identifier: EUPL-1.2

******************************************************************************/
package it.csi.apisan.apisanfse.integration.arruolamento.preferenze;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.14
 * 2018-11-05T17:23:28.403+01:00
 * Generated source version: 2.7.14
 * 
 */
@WebServiceClient(name = "CCSetPreferenzeArruolabilitaService", 
                  wsdlLocation = "https://tst-feapi-dma.isan.csi.it/dmaccmedrti/services/CCSetPreferenzeArruolabilitaService?wsdl",
                  targetNamespace = "http://dmacc.csi.it/SetPreferenzeArruolabilita/") 
public class CCSetPreferenzeArruolabilitaService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://dmacc.csi.it/SetPreferenzeArruolabilita/", "CCSetPreferenzeArruolabilitaService");
    public final static QName CCSetPreferenzeArruolabilitaServiceHttpSoap11Endpoint = new QName("http://dmacc.csi.it/SetPreferenzeArruolabilita/", "CCSetPreferenzeArruolabilitaServiceHttpSoap11Endpoint");
    public final static QName CCSetPreferenzeArruolabilitaServiceHttpEndpoint = new QName("http://dmacc.csi.it/SetPreferenzeArruolabilita/", "CCSetPreferenzeArruolabilitaServiceHttpEndpoint");
    public final static QName CCSetPreferenzeArruolabilitaServiceHttpsSoap11Endpoint = new QName("http://dmacc.csi.it/SetPreferenzeArruolabilita/", "CCSetPreferenzeArruolabilitaServiceHttpsSoap11Endpoint");
    public final static QName CCSetPreferenzeArruolabilitaServiceHttpsEndpoint = new QName("http://dmacc.csi.it/SetPreferenzeArruolabilita/", "CCSetPreferenzeArruolabilitaServiceHttpsEndpoint");
    public final static QName CCSetPreferenzeArruolabilitaServiceHttpsSoap12Endpoint = new QName("http://dmacc.csi.it/SetPreferenzeArruolabilita/", "CCSetPreferenzeArruolabilitaServiceHttpsSoap12Endpoint");
    public final static QName CCSetPreferenzeArruolabilitaServiceHttpSoap12Endpoint = new QName("http://dmacc.csi.it/SetPreferenzeArruolabilita/", "CCSetPreferenzeArruolabilitaServiceHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("https://tst-feapi-dma.isan.csi.it/dmaccmedrti/services/CCSetPreferenzeArruolabilitaService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CCSetPreferenzeArruolabilitaService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://tst-feapi-dma.isan.csi.it/dmaccmedrti/services/CCSetPreferenzeArruolabilitaService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CCSetPreferenzeArruolabilitaService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CCSetPreferenzeArruolabilitaService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CCSetPreferenzeArruolabilitaService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CCSetPreferenzeArruolabilitaService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CCSetPreferenzeArruolabilitaService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CCSetPreferenzeArruolabilitaService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpSoap11Endpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpSoap11Endpoint() {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpSoap11Endpoint, CCSetPreferenzeArruolabilitaServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpSoap11Endpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpSoap11Endpoint, CCSetPreferenzeArruolabilitaServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpEndpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpEndpoint() {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpEndpoint, CCSetPreferenzeArruolabilitaServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpEndpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpEndpoint, CCSetPreferenzeArruolabilitaServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpsSoap11Endpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpsSoap11Endpoint() {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpsSoap11Endpoint, CCSetPreferenzeArruolabilitaServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpsSoap11Endpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpsSoap11Endpoint, CCSetPreferenzeArruolabilitaServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpsEndpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpsEndpoint() {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpsEndpoint, CCSetPreferenzeArruolabilitaServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpsEndpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpsEndpoint, CCSetPreferenzeArruolabilitaServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpsSoap12Endpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpsSoap12Endpoint() {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpsSoap12Endpoint, CCSetPreferenzeArruolabilitaServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpsSoap12Endpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpsSoap12Endpoint, CCSetPreferenzeArruolabilitaServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpSoap12Endpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpSoap12Endpoint() {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpSoap12Endpoint, CCSetPreferenzeArruolabilitaServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCSetPreferenzeArruolabilitaServicePortType
     */
    @WebEndpoint(name = "CCSetPreferenzeArruolabilitaServiceHttpSoap12Endpoint")
    public CCSetPreferenzeArruolabilitaServicePortType getCCSetPreferenzeArruolabilitaServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(CCSetPreferenzeArruolabilitaServiceHttpSoap12Endpoint, CCSetPreferenzeArruolabilitaServicePortType.class, features);
    }

}
