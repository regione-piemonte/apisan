<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-4.1.xsd">


	<context:property-placeholder location="WEB-INF/*.properties"/> 
	<context:annotation-config />

	<!--PROTECTED REGION ID(R-1054124068) ENABLED START-->
	<!-- Insert here your custom Spring Beans -->
	
	<context:component-scan base-package="it.csi.apisan.apisancod" />

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="apisan/jdbc/apisanDS" />
		<property name="proxyInterface" value="javax.sql.DataSource" />
	</bean>
		
	<bean id="namedJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Bean utilizzato per le operazioni di Tracciatura. Sostituire qui con 
		un implmenetazione su coda JMS Per ora utilizziamo un implementazione che 
		fa semplicemente il logging. -->
	<bean id="apisanTraceOperation" name="apisanTraceOperation"
		class="it.csi.apisan.apisancod.util.trace.ApisanTraceOperationDB" />



</beans>
