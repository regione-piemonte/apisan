/*******************************************************************************

* Copyright Regione Piemonte - 2022

* SPDX-License-Identifier: EUPL-1.2

******************************************************************************/
package org.wso2.ws.dataservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.14
 * 2020-05-14T08:42:59.496+02:00
 * Generated source version: 2.7.14
 * 
 */
@WebServiceClient(name = "GPR_DATASERVICE", 
                  wsdlLocation = "file:/C:/Users/2048/AppData/Local/Temp/tempdir7807752189579069304.tmp/GPR_DATASERVICE_1.wsdl",
                  targetNamespace = "http://ws.wso2.org/dataservice") 
public class GPRDATASERVICE extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.wso2.org/dataservice", "GPR_DATASERVICE");
    public final static QName SecureSOAP11Endpoint = new QName("http://ws.wso2.org/dataservice", "SecureSOAP11Endpoint");
    public final static QName JMSSOAP11Endpoint = new QName("http://ws.wso2.org/dataservice", "JMSSOAP11Endpoint");
    public final static QName SecureHTTPEndpoint = new QName("http://ws.wso2.org/dataservice", "SecureHTTPEndpoint");
    public final static QName SOAP11Endpoint = new QName("http://ws.wso2.org/dataservice", "SOAP11Endpoint");
    public final static QName SecureSOAP12Endpoint = new QName("http://ws.wso2.org/dataservice", "SecureSOAP12Endpoint");
    public final static QName HTTPEndpoint = new QName("http://ws.wso2.org/dataservice", "HTTPEndpoint");
    public final static QName JMSSOAP12Endpoint = new QName("http://ws.wso2.org/dataservice", "JMSSOAP12Endpoint");
    public final static QName SOAP12Endpoint = new QName("http://ws.wso2.org/dataservice", "SOAP12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/2048/AppData/Local/Temp/tempdir7807752189579069304.tmp/GPR_DATASERVICE_1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(GPRDATASERVICE.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/2048/AppData/Local/Temp/tempdir7807752189579069304.tmp/GPR_DATASERVICE_1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public GPRDATASERVICE(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public GPRDATASERVICE(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GPRDATASERVICE() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public GPRDATASERVICE(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public GPRDATASERVICE(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public GPRDATASERVICE(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SecureSOAP11Endpoint")
    public GPRDATASERVICEPortType getSecureSOAP11Endpoint() {
        return super.getPort(SecureSOAP11Endpoint, GPRDATASERVICEPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SecureSOAP11Endpoint")
    public GPRDATASERVICEPortType getSecureSOAP11Endpoint(WebServiceFeature... features) {
        return super.getPort(SecureSOAP11Endpoint, GPRDATASERVICEPortType.class, features);
    }
    /**
     *
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "JMSSOAP11Endpoint")
    public GPRDATASERVICEPortType getJMSSOAP11Endpoint() {
        return super.getPort(JMSSOAP11Endpoint, GPRDATASERVICEPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "JMSSOAP11Endpoint")
    public GPRDATASERVICEPortType getJMSSOAP11Endpoint(WebServiceFeature... features) {
        return super.getPort(JMSSOAP11Endpoint, GPRDATASERVICEPortType.class, features);
    }
    /**
     *
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SecureHTTPEndpoint")
    public GPRDATASERVICEPortType getSecureHTTPEndpoint() {
        return super.getPort(SecureHTTPEndpoint, GPRDATASERVICEPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SecureHTTPEndpoint")
    public GPRDATASERVICEPortType getSecureHTTPEndpoint(WebServiceFeature... features) {
        return super.getPort(SecureHTTPEndpoint, GPRDATASERVICEPortType.class, features);
    }
    /**
     *
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SOAP11Endpoint")
    public GPRDATASERVICEPortType getSOAP11Endpoint() {
        return super.getPort(SOAP11Endpoint, GPRDATASERVICEPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SOAP11Endpoint")
    public GPRDATASERVICEPortType getSOAP11Endpoint(WebServiceFeature... features) {
        return super.getPort(SOAP11Endpoint, GPRDATASERVICEPortType.class, features);
    }
    /**
     *
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SecureSOAP12Endpoint")
    public GPRDATASERVICEPortType getSecureSOAP12Endpoint() {
        return super.getPort(SecureSOAP12Endpoint, GPRDATASERVICEPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SecureSOAP12Endpoint")
    public GPRDATASERVICEPortType getSecureSOAP12Endpoint(WebServiceFeature... features) {
        return super.getPort(SecureSOAP12Endpoint, GPRDATASERVICEPortType.class, features);
    }
    /**
     *
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "HTTPEndpoint")
    public GPRDATASERVICEPortType getHTTPEndpoint() {
        return super.getPort(HTTPEndpoint, GPRDATASERVICEPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "HTTPEndpoint")
    public GPRDATASERVICEPortType getHTTPEndpoint(WebServiceFeature... features) {
        return super.getPort(HTTPEndpoint, GPRDATASERVICEPortType.class, features);
    }
    /**
     *
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "JMSSOAP12Endpoint")
    public GPRDATASERVICEPortType getJMSSOAP12Endpoint() {
        return super.getPort(JMSSOAP12Endpoint, GPRDATASERVICEPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "JMSSOAP12Endpoint")
    public GPRDATASERVICEPortType getJMSSOAP12Endpoint(WebServiceFeature... features) {
        return super.getPort(JMSSOAP12Endpoint, GPRDATASERVICEPortType.class, features);
    }
    /**
     *
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SOAP12Endpoint")
    public GPRDATASERVICEPortType getSOAP12Endpoint() {
        return super.getPort(SOAP12Endpoint, GPRDATASERVICEPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GPRDATASERVICEPortType
     */
    @WebEndpoint(name = "SOAP12Endpoint")
    public GPRDATASERVICEPortType getSOAP12Endpoint(WebServiceFeature... features) {
        return super.getPort(SOAP12Endpoint, GPRDATASERVICEPortType.class, features);
    }

}
